function [ pointIndex ] = pointOfConvergenceFromStartingPoint( theta )
%Returns an index indicating the point of convergence of the function 
%g(x,y)=[x^3-3xy^2-1,3x^2y-y^3] given the starting point theta and using
%Newton's Method.
%   The returned index lies in {1,2,3} and corresponds to the solutions
%   [1,0], [-0.5,sqrt(3)/2] and [-0.5,-sqrt(3)/2].

% Function handle for g
g = @(x) [x(1)^3-3*x(1)*x(2)^2-1; 3*x(1)^2*x(2)-x(2)^3];

while(~hasConverged(g(theta), 0.01))
    
    
    
end



end

function J_inv = inverseJacobian( theta )
%Helper function computing the inverse of the Jacobian J(theta) where 
% J(x,y) = [3x^2-3y^2,   -6xy   ;
%   		   6xy   , 3x^2-3y^2]	
a = 3*theta(1)^2-3*theta(2)^2;
d = a;
b = -6*theta(1)*theta(2);
c = -b;
J_inv = [d, -b; -c, a]/(a*d-b*c);
end

function [isConverged, index] = hasConverged( value, epsilon )
if(norm(value-[1;0])<epsilon)
    isConverged = true;
    index = 1;
elseif(norm(value-[1;0])<epsilon)
isConverged = true;
    index = 1;
elseif(norm(value-[1;0])<epsilon)
   isConverged = true;
    index = 1;
else
       isConverged = true;


end